plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id "nu.studer.jooq" version "9.0"
}

group = 'com.mea-viewer-backend'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.jooq:jooq:3.19.10'
    implementation 'org.jooq:jooq-codegen:3.19.10'
    implementation 'org.jooq:jooq-meta:3.19.10'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'mysql:mysql-connector-java:8.0.33' // MySQL JDBC driver dependency
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
}

jooq {
    version = '3.19.10'
    configurations {
        main {
            generateSchemaSourceOnCompilation = true
            generationTool {
                jdbc {
                    driver = 'com.mysql.cj.jdbc.Driver'
                    url = 'jdbc:mysql://localhost:3306/mea_db'
                    user = 'root'
                    password = 'root_pass'
                }
                generator {
                    database {
                        name = 'org.jooq.meta.mysql.MySQLDatabase'
                        inputSchema = 'mea_db'
                    }
                    generate {
                        daos = true
                        pojos = true
                    }
                    target {
                        packageName = 'com.mea-viewer-backend.figure-management.jooq'
                        directory = 'src/main/java'
                    }
                }
            }
        }
    }
}

tasks.named('generateJooq') {
    dependsOn configurations.runtimeClasspath // Ensure runtime classpath is available
}

tasks.named('test') {
    useJUnitPlatform()
}
